<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                     http://www.springframework.org/schema/context
                     http://www.springframework.org/schema/context/spring-context-3.0.xsd
                     http://www.springframework.org/schema/tx 
                     http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

		<context:property-placeholder location="classpath:/jdbcConfig/jdbc.properties"/>
    	
    	<!-- 阿里 druid数据库连接池 -->
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			destroy-method="close">
			<!-- 数据库基本信息配置 -->
			<property name="url" value="${jdbc.url}" ></property>
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="driverClassName" value="${jdbc.driverClassName}" />
			<property name="filters" value="${filters}" />
			<!-- 最大并发连接数 -->
			<property name="maxActive" value="${maxActive}" />
			<!-- 初始化连接数量 -->
			<property name="initialSize" value="${initialSize}" />
			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="${maxWait}" />
			<!-- 最小空闲连接数 -->
			<property name="minIdle" value="${minIdle}" />
			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" ></property>
			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
			<property name="validationQuery" value="${validationQuery}" />
			<property name="testWhileIdle" value="${testWhileIdle}" />
			<property name="testOnBorrow" value="${testOnBorrow}" />
			<property name="testOnReturn" value="${testOnReturn}" />
			<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
			<!-- 打开removeAbandoned功能 -->
			<property name="removeAbandoned" value="${removeAbandoned}" />
			<!-- 1800秒，也就是30分钟 -->
			<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
			<!-- 关闭abanded连接时输出错误日志 -->
			<property name="logAbandoned" value="${logAbandoned}" />
		</bean>
    	
    	<!-- 配置mybatis -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="configLocation" value="classpath:jdbcConfig/mybatis_param.xml"></property>
			<!-- mapper扫描 -->
			<property name="mapperLocations" value="classpath:mybatismapper/**/*.xml"></property>
		</bean>
			
		<bean id="mapperScan" class="org.mybatis.spring.mapper.MapperScannerConfigurer">	
			<property name="basePackage" value="com.uspring.sdsmesplus.dao, com.uspring.sdsmesplus.dao.generate"></property>
			<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		</bean>


		<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"
			scope="prototype">
			<constructor-arg ref="sqlSessionFactory" />
		</bean>
		
		<!-- 定义事务管理器 -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource" />
		</bean>
		<!--使用注释事务 -->
		<tx:annotation-driven  transaction-manager="transactionManager" />
</beans>    